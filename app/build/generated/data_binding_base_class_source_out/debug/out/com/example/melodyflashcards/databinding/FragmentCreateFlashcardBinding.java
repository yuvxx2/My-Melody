// Generated by view binder compiler. Do not edit!
package com.example.melodyflashcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.melodyflashcards.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreateFlashcardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView backCard;

  @NonNull
  public final TextInputEditText backInput;

  @NonNull
  public final TextInputLayout backInputLayout;

  @NonNull
  public final Spinner categorySpinner;

  @NonNull
  public final Button clearButton;

  @NonNull
  public final TextView createTitle;

  @NonNull
  public final MaterialCardView frontCard;

  @NonNull
  public final TextInputEditText frontInput;

  @NonNull
  public final TextInputLayout frontInputLayout;

  @NonNull
  public final ImageView melodyPencil;

  @NonNull
  public final Button prevButton;

  @NonNull
  public final Button saveButton;

  private FragmentCreateFlashcardBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView backCard, @NonNull TextInputEditText backInput,
      @NonNull TextInputLayout backInputLayout, @NonNull Spinner categorySpinner,
      @NonNull Button clearButton, @NonNull TextView createTitle,
      @NonNull MaterialCardView frontCard, @NonNull TextInputEditText frontInput,
      @NonNull TextInputLayout frontInputLayout, @NonNull ImageView melodyPencil,
      @NonNull Button prevButton, @NonNull Button saveButton) {
    this.rootView = rootView;
    this.backCard = backCard;
    this.backInput = backInput;
    this.backInputLayout = backInputLayout;
    this.categorySpinner = categorySpinner;
    this.clearButton = clearButton;
    this.createTitle = createTitle;
    this.frontCard = frontCard;
    this.frontInput = frontInput;
    this.frontInputLayout = frontInputLayout;
    this.melodyPencil = melodyPencil;
    this.prevButton = prevButton;
    this.saveButton = saveButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreateFlashcardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreateFlashcardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create_flashcard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreateFlashcardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_card;
      MaterialCardView backCard = ViewBindings.findChildViewById(rootView, id);
      if (backCard == null) {
        break missingId;
      }

      id = R.id.back_input;
      TextInputEditText backInput = ViewBindings.findChildViewById(rootView, id);
      if (backInput == null) {
        break missingId;
      }

      id = R.id.back_input_layout;
      TextInputLayout backInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (backInputLayout == null) {
        break missingId;
      }

      id = R.id.category_spinner;
      Spinner categorySpinner = ViewBindings.findChildViewById(rootView, id);
      if (categorySpinner == null) {
        break missingId;
      }

      id = R.id.clear_button;
      Button clearButton = ViewBindings.findChildViewById(rootView, id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.create_title;
      TextView createTitle = ViewBindings.findChildViewById(rootView, id);
      if (createTitle == null) {
        break missingId;
      }

      id = R.id.front_card;
      MaterialCardView frontCard = ViewBindings.findChildViewById(rootView, id);
      if (frontCard == null) {
        break missingId;
      }

      id = R.id.front_input;
      TextInputEditText frontInput = ViewBindings.findChildViewById(rootView, id);
      if (frontInput == null) {
        break missingId;
      }

      id = R.id.front_input_layout;
      TextInputLayout frontInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (frontInputLayout == null) {
        break missingId;
      }

      id = R.id.melody_pencil;
      ImageView melodyPencil = ViewBindings.findChildViewById(rootView, id);
      if (melodyPencil == null) {
        break missingId;
      }

      id = R.id.prev_button;
      Button prevButton = ViewBindings.findChildViewById(rootView, id);
      if (prevButton == null) {
        break missingId;
      }

      id = R.id.save_button;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      return new FragmentCreateFlashcardBinding((ConstraintLayout) rootView, backCard, backInput,
          backInputLayout, categorySpinner, clearButton, createTitle, frontCard, frontInput,
          frontInputLayout, melodyPencil, prevButton, saveButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
