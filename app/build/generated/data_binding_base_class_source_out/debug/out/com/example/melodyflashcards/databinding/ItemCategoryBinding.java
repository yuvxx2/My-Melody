// Generated by view binder compiler. Do not edit!
package com.example.melodyflashcards.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.melodyflashcards.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCategoryBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView cardCount;

  @NonNull
  public final ImageView categoryIcon;

  @NonNull
  public final TextView categoryName;

  @NonNull
  public final Button studyButton;

  private ItemCategoryBinding(@NonNull MaterialCardView rootView, @NonNull TextView cardCount,
      @NonNull ImageView categoryIcon, @NonNull TextView categoryName,
      @NonNull Button studyButton) {
    this.rootView = rootView;
    this.cardCount = cardCount;
    this.categoryIcon = categoryIcon;
    this.categoryName = categoryName;
    this.studyButton = studyButton;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCategoryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCategoryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_category, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCategoryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_count;
      TextView cardCount = ViewBindings.findChildViewById(rootView, id);
      if (cardCount == null) {
        break missingId;
      }

      id = R.id.category_icon;
      ImageView categoryIcon = ViewBindings.findChildViewById(rootView, id);
      if (categoryIcon == null) {
        break missingId;
      }

      id = R.id.category_name;
      TextView categoryName = ViewBindings.findChildViewById(rootView, id);
      if (categoryName == null) {
        break missingId;
      }

      id = R.id.study_button;
      Button studyButton = ViewBindings.findChildViewById(rootView, id);
      if (studyButton == null) {
        break missingId;
      }

      return new ItemCategoryBinding((MaterialCardView) rootView, cardCount, categoryIcon,
          categoryName, studyButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
